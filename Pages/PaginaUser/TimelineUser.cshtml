@page "/Timeline"
@model MaoSolidaria.Pages.PaginaUser.TimelineUserModel
@{
}
<div id="main-content" class="container-fluid">
    <div class="row h-100">
        <!-- USUÁRIO -->
        <div id="user-photo-section" class="col-md-2 d-flex flex-column align-items-center justify-content-center mb-0">
            <img id="perfil-imagem"
                 class="rounded-circle mb-3"
                 width="150px"
                 height="150px"
                 style="object-fit: cover;"
                 src="@(string.IsNullOrEmpty(Model.UsuarioLogado.CaminhoImagem)
             ? "/img/avatar-padrao.png"
             : Model.UsuarioLogado.CaminhoImagem)"
                 alt="Imagem do usuário" />
            <h2 class="text-white text-center" id="user-name">@Model.UsuarioLogado.NomeCompleto</h2>
            <p class="text-white" id="user-email">@Model.UsuarioLogado.Email</p>
            <p class="text-white" id="user-phone">@Model.UsuarioLogado.PhoneNumber</p>

            <a asp-page="/PaginaUser/PerfilUser" class="btn text-black" id="btnGeral">Editar Perfil</a>
        </div>

        <!--TIMELINE-->
        <div id="timeline-section" class="col-md-10 p-4 overflow-auto mt-3 mt-md-0">
            <div class="d-flex justify-content-center mb-4">
                <a href="#" class="timeline-link" data-bs-toggle="modal" data-bs-target="#novaPostagemModal">Nova Postagem</a>
                <a asp-page="/PaginaUser/PostagensUser" class="timeline-link" id="edit-post-link">Minhas Postagens</a>
            </div>

            @if (!Model.Postagens.Any())
            {
                <div class="text-center mt-5">
                    <p class="fs-4 text-muted">
                        🧐 Ops... Nenhuma postagem encontrada com esse termo!
                    </p>
                </div>
            }

            @foreach (var postagem in Model.Postagens)
            {
                <div class="postagem mb-4 p-3 custom-postagem">
                    <div class="d-flex align-items-center mb-2 custom-header">
                        <img src="@(string.IsNullOrEmpty(postagem.Usuario.CaminhoImagem) ? "/img/avatar-padrao.png" : postagem.Usuario.CaminhoImagem)"
                             class="rounded-circle me-3" width="50" height="50" alt="Usuário" />
                        <div>
                            <h6 class="mb-0 custom-name">@postagem.Usuario.NomeCompleto</h6>
                            <small class="text-muted custom-date">@postagem.DataCriacao.ToString("dd 'de' MMMM 'de' yyyy 'às' HH:mm")</small>
                        </div>
                    </div>

                    <p class="mb-3 custom-text">@postagem.Texto</p>

                    @if (!string.IsNullOrEmpty(postagem.CaminhoImagem))
                    {
                        <img src="@postagem.CaminhoImagem" class="img-fluid rounded" alt="Imagem da postagem" />
                    }

                    <div class="d-flex align-items-center mt-3 justify-content-between flex-wrap">
                        <!-- Botão Comentários -->
                        <a href="#" data-bs-toggle="modal" data-bs-target="#comentariosModal"
                           onclick="carregarComentarios(@postagem.Id)"
                           class="d-flex align-items-center text-decoration-none">
                            <span class="postagem-text-icon me-2">Comentários</span>
                            <i class="bi bi-chat-left-text" style="font-size: 1.2rem; color: #007bff;"></i>
                        </a>

                        <!-- Botão Iniciar conversa -->
                        <a asp-page="/PaginaUser/ChatUser"
                           asp-route-DestinatarioId="@postagem.Usuario.Id"
                           class="d-flex align-items-center text-decoration-none">
                            <span class="postagem-text-icon me-2">Iniciar conversa</span>
                            <i class="bi bi-chat-dots" style="font-size: 1.2rem; color: #007bff;"></i>
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- MODAL DE POSTAGENS -->
    <div class="modal fade" id="novaPostagemModal" tabindex="-1" aria-labelledby="novaPostagemModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-body">
                    <form method="post" enctype="multipart/form-data" asp-page-handler="Criar">
                        <div class="mb-3">
                            <label for="postagemTexto" class="form-label">Escreva algo...</label>
                            <textarea id="postagemTexto" name="NovaPostagem.Texto" class="form-control" rows="4" required></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="imagemPostagem" class="form-label d-flex align-items-center">
                                <i class="bi bi-camera me-2" style="font-size: 1.5rem;"></i>
                                <span>Escolher Imagem (opcional)</span>
                            </label>
                            <input type="file" id="imagemPostagem" name="ImagemPostagem" class="form-control" accept="image/*">
                        </div>
                        <div class="d-flex justify-content-center gap-3">
                            <button type="submit" class="btn btn-primary btn-lg">Postar</button>
                            <button type="button" class="btn btn-secondary btn-lg" data-bs-dismiss="modal">Cancelar</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- MODAL DE COMENTÁRIOS-->
    <div class="modal fade" id="comentariosModal" tabindex="-1" aria-labelledby="comentariosModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header justify-content-center">
                    <h5 class="modal-title" id="comentariosModalLabel">Comentários</h5>
                </div>
                <div class="modal-body">
                    <div class="comments-list mb-3"></div>
                    <div class="mt-3">
                        <label for="comment-input" class="form-label fw-bold">Comentário</label>
                        <textarea class="form-control" id="comment-input" rows="3" placeholder="Escreva seu comentário..."></textarea>
                        <div class="d-flex justify-content-end mt-2">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                            <button type="button" id="btnEnviarComentario" class="btn text-black ms-2">Enviar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
<meta name="RequestVerificationToken" content="@Xsrf.GetAndStoreTokens(HttpContext).RequestToken" />

<script>
    let postagemIdAtual = 0;

    document.addEventListener("DOMContentLoaded", function () {
        const comentariosModal = document.getElementById('comentariosModal');

        comentariosModal.addEventListener('show.bs.modal', function () {
            const lista = document.querySelector(".comments-list");
            if (!lista) return;
            lista.innerHTML = "";
        });

        function carregarComentarios(postagemId) {
            postagemIdAtual = postagemId;
            fetch(`/Timeline?handler=Comentarios&id=${postagemId}`)
                .then(response => response.json())
                .then(data => {
                    const lista = document.querySelector(".comments-list");
                    lista.innerHTML = "";
                    if (data.length === 0) {
                        lista.innerHTML = "<p class='text-muted'>Nenhum comentário ainda.</p>";
                    } else {
                        data.forEach(c => {
                            const html = `
                                <div class="comment mb-3">
                                    <div class="d-flex align-items-center mb-2">
                                        <img src="${c.imagem ?? '/img/avatar-padrao.png'}" class="rounded-circle me-3" width="40" height="40" alt="Usuário">
                                        <div>
                                            <h4 class="mb-0">${c.nome}</h4>
                                            <small class="text-muted">${c.data}</small>
                                        </div>
                                    </div>
                                    <p class="comment-text mb-0">${c.texto}</p>
                                </div>
                            `;
                            lista.innerHTML += html;
                        });
                    }
                });
        }

        window.carregarComentarios = carregarComentarios;

        const btnEnviarComentario = document.getElementById("btnEnviarComentario");

        if (btnEnviarComentario) {
            btnEnviarComentario.addEventListener("click", function () {
                const texto = document.getElementById("comment-input").value.trim();
                if (!texto) return;

                const token = document
                    .querySelector('meta[name="RequestVerificationToken"]')
                    .getAttribute('content');

                fetch("/Timeline?handler=AdicionarComentario", {
                    method: "POST",
                    credentials: "same-origin",
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded",
                        "RequestVerificationToken": token
                    },
                    body: `ComentarioTexto=${encodeURIComponent(texto)}&ComentarioPostagemId=${postagemIdAtual}`
                })
                .then(async res => {
                    if (!res.ok) {
                        const texto = await res.text();
                        console.error("Erro do servidor:", texto);
                        throw new Error("Erro ao enviar comentário.");
                    }
                    return res.json();
                })
                .then(res => {
                    if (res.sucesso) {
                        document.getElementById("comment-input").value = "";
                        carregarComentarios(postagemIdAtual);
                    } else {
                        alert("Erro ao enviar comentário.");
                    }
                });
            });
        }
    });
</script>